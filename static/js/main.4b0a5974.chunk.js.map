{"version":3,"sources":["logo.svg","components/Header.js","components/MLsettings.js","components/D3Component.js","components/SelectedModel.js","components/TrainLogs.js","components/TrainableModel.js","components/Supported.js","components/DDContent.js","components/DDColumns.js","components/DashboardStyles.js","components/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","withStyles","root","flexGrow","grow","menuButton","marginLeft","marginRight","props","classes","react_default","a","createElement","className","index_es","position","color","icons_index_es","variant","MLsettings","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_this","card","title","subheader","cardHeader","label","type","inpField","InputLabelProps","shrink","margin","current","epochs","onChange","e","onEpochsChange","target","select","optimizer","onOptimizerChange","optimizers","map","learningRate","onLearningRateChange","regularization","onRegularizationChange","regularizations","reg","Component","align","marginTop","marginBottom","height","minWidth","D3Component","_React$Component","call","mouseClickData","point","x","Math","floor","xValue","y","yValue","onDatapointAdd","es6","width","top","right","bottom","left","onClick","addLinePoint","strokeDasharray","dataKey","name","domain","dataMax","offset","angle","cursor","verticalAlign","data","fill","predict","predictData","React","SelectedModel","button","TrainLogs","stroke","dot","parseData","tf","shuffle","xValues","yValues","i","length","concat","xTensor","yTensor","xMin","min","xMax","max","yMin","yMax","yNorm","sub","div","xNorm","TrainableModel","handleEpochsChange","epochsNow","setState","handleRegularizationChange","regularizationNow","handleOptimizerChange","optimizerNow","handleLearningRateChange","learningRateNow","handleAddingDatapoint","datapoint","prevState","trainData","defaults","state","trainLogs","dataMaxX","dataMaxY","nowTraining","predictedData","model","tfModel","add","dense","units","inputShape","getTensorflowLinearModel","bind","assertThisInitialized","_this2","fittable","compile","loss","meanSquaredError","metrics","lr","fit","callbacks","onEpochEnd","epoch","logs","changedLogs","onTrainEnd","_this3","_tf$tidy","preds","reshape","analysedData","unNormX","mul","unNormY","dataSync","_tf$tidy2","slicedToArray","Array","from","val","_this4","container","spacing","item","xs","grid","components_SelectedModel","components_MLsettings","components_D3Component","components_TrainLogs","trainModel","disabled","size","display","flexDirection","supported","elements","opt-Adam","id","content","opt-RMSProp","opt-Momentum","reg-L1","reg-L2","mod-Linear","columns","col-opt","elementIds","col-reg","col-mod","columnOrder","Container","styled","_templateObject","isDragging","DDContent","react_beautiful_dnd_esm","draggableId","element","index","provided","snapshot","assign","draggableProps","dragHandleProps","ref","innerRef","DDColumns_templateObject","isDraggingOver","DDColumn","inset","column","droppableId","droppableType","DDColumns_Container","droppableProps","components_DDContent","placeholder","styles","theme","toolbar","paddingRight","toolbarIcon","objectSpread","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButtonHidden","drawerPaper","whiteSpace","drawerPaperClose","defineProperty","overflowX","unit","breakpoints","up","appBarSpacer","overflow","chartContainer","tableContainer","mainFeaturedPost","borderRadius","mainFeaturedPostContent","backgroundColor","palette","grey","common","white","h5","dropArea","minHeight","gridMargins","textField","paddingTop","paddingBottom","whiteFont","buttonStyle","Dashboard_templateObject","TargetContainer","_templateObject2","Dashboard","onDragEnd","result","destination","source","startsWith","startColumn","newElementIds","splice","newColumn","newState","CssBaseline_default","AppBar_default","classNames","Toolbar_default","disableGutters","Typography_default","component","noWrap","Drawer_default","paper","open","columnId","elementId","DDColumns","elevation","md","gutterBottom","Dashboard_Container","App","rel","href","src","components_Dashboard","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4b0a5974.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    Typography,\r\n    Button,\r\n    IconButton,\r\n    Paper\r\n} from '@material-ui/core';\r\nimport {Menu} from '@material-ui/icons';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nconst styles = {\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginLeft: -12,\r\n      marginRight: 20,\r\n    },\r\n  };\r\nfunction Header(props) {\r\n    const {classes} = props;\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position='static'>\r\n        <Toolbar>\r\n            <IconButton className={classes.menuButton} color='inherit'>\r\n            <Menu />\r\n            </IconButton>\r\n        <Typography variant='h6' color='inherit' className={classes.grow}>\r\n            TM\r\n        </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles) (Header);\r\n","import React, { Component } from 'react'\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardContent,\r\n    TextField,\r\n    MenuItem\r\n} from '@material-ui/core';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nconst styles = {\r\n  cardHeader : {\r\n    align:\"left\"\r\n  },\r\n  card : {\r\n      marginLeft:10,\r\n      marginTop:10,\r\n      marginRight:10,\r\n      marginBottom: 10,\r\n      height : \"100%\"\r\n  },\r\n  inpField : {\r\n    marginLeft:10,\r\n    marginRight:10,\r\n    minWidth: 200\r\n  }\r\n};\r\nexport class MLsettings extends Component {\r\n \r\n  render() {\r\n    const {classes} = this.props;\r\n    return (\r\n      <div>\r\n        <Card className={classes.card}>\r\n          <CardHeader title = {\r\n                        \"Hyperparameters\"\r\n                          }\r\n                      subheader = {\r\n                        \"Tune Your Hyperparameters\"\r\n                          }\r\n                      className={classes.cardHeader}\r\n          />\r\n          <CardContent>\r\n            <div>\r\n              <TextField  label=\"Epochs\"\r\n                          type=\"number\"\r\n                          className={classes.inpField}\r\n                          InputLabelProps={{\r\n                            shrink: true,\r\n                                        }}\r\n                          margin=\"normal\"\r\n                          value = {this.props.current.epochs}\r\n                          onChange = {(e) => { this.props.onEpochsChange(e.target.value)}}\r\n              />\r\n              <TextField  label=\"Optimizer\"\r\n                          className={classes.inpField}\r\n                          select\r\n                          margin=\"normal\"\r\n                          value = {this.props.current.optimizer}\r\n                          onChange = {(e) => {this.props.onOptimizerChange(e.target.value)}}\r\n              >\r\n                {this.props.optimizers.map(optimizer => (\r\n                  <MenuItem key = {optimizer} value = {optimizer}>\r\n                    {optimizer}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n              <TextField  label=\"Learning Rate\"\r\n                          type=\"number\"\r\n                          className={classes.inpField}\r\n                          InputLabelProps={{\r\n                            shrink: true,\r\n                                      }}\r\n                          margin=\"normal\"\r\n                          value = {this.props.current.learningRate}\r\n                          onChange = {(e) => this.props.onLearningRateChange(e.target.value)}\r\n              />\r\n              <TextField  label=\"Regularization\"\r\n                          className={classes.inpField}\r\n                          select\r\n                          margin=\"normal\" \r\n                          value = {this.props.current.regularization}\r\n                          onChange={(e) => {this.props.onRegularizationChange(e.target.value)} }\r\n              >       \r\n                \r\n                {this.props.regularizations.map(reg => (\r\n                  <MenuItem key = {reg} value = {reg}>\r\n                    {reg}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles) (MLsettings);\r\n","import React from 'react'\r\nimport {Label, ScatterChart, Scatter, CartesianGrid, XAxis, YAxis, Tooltip, Legend} from 'recharts';\r\nconst data = [{ \"x\": 400, \"y\":100}, {\"x\": 650, \"y\":200}, { \"x\": 100, \"y\":300}, { \"x\": 1000, \"y\":400}, { \"x\": 750, \"y\":500} ];\r\n\r\nexport class D3Component extends React.Component {\r\n\r\nconstructor(props)\r\n  {\r\n      super(props);\r\n  }\r\n\r\n  addLinePoint(mouseClickData) \r\n  {\r\n      if (mouseClickData)\r\n      {\r\n        //console.log(mouseClickData);\r\n        var point  = {x : Math.floor(mouseClickData.xValue) , y : Math.floor(mouseClickData.yValue) };\r\n        this.props.onDatapointAdd(point);\r\n        //console.log(this.props.data);\r\n        //console.log(chartY);\r\n        //this.setState((prevState) => ({\r\n        //  data : prevState.data.concat([{\"x\" : point.x, \"y\":point.y}])\r\n        //}))\r\n        \r\n  }\r\n}\r\n\r\nrender() {\r\n  return (\r\n    <div>\r\n                                 \r\n<ScatterChart width={500} height={300}\r\n  margin={{ top: 20, right: 20, bottom:3, left: 10 }} onClick = {(mouseClickData) => {this.addLinePoint(mouseClickData)}}>\r\n  <CartesianGrid strokeDasharray=\"3 3\" />\r\n  <XAxis dataKey=\"x\" name=\"Y\" domain={[0, this.props.dataMax[0]]} type=\"number\"> \r\n    <Label value = \"X\"  position=\"insideBottom\"  offset={-3} />\r\n  </XAxis>\r\n  <YAxis dataKey=\"y\" name=\"X\" domain={[0, this.props.dataMax[1]]} type=\"number\">\r\n    <Label value=\"Y\" position=\"insideLeft\" angle={-90} />\r\n  </YAxis>\r\n  <Tooltip cursor={{ strokeDasharray: '3 3' }} />  \r\n  <Legend verticalAlign={\"top\"} height={30} />\r\n  <Scatter name=\"Training Data\" data={this.props.data} fill=\"#8884d8\" />\r\n  {this.props.predict && <Scatter name=\"Predicted\" data={this.props.predictData}  fill=\"#000000\"/>}\r\n  </ScatterChart>\r\n  </div>\r\n  )\r\n}\r\n}\r\n\r\nexport default D3Component;\r\n","import React, { Component } from 'react'\r\nimport {\r\n    List,\r\n    ListItem,\r\n    ListItemSecondaryAction,\r\n    Card,\r\n    CardHeader,\r\n    CardContent,\r\n    IconButton,\r\n    } from '@material-ui/core';\r\nimport {CheckCircle} from '@material-ui/icons';\r\nimport {withStyles} from '@material-ui/core/styles';\r\n\r\n\r\nconst styles = \r\n{\r\n    card : {\r\n        marginLeft:10,\r\n        marginTop:10,\r\n        marginRight:10,\r\n        marginBottom: 10,\r\n        height : \"100%\"\r\n    },\r\n    cardHeader : {\r\n        align:\"left\"\r\n      },\r\n}\r\n\r\nexport class SelectedModel extends Component {\r\n  render() {\r\n    const {classes} = this.props;\r\n    return (\r\n      <div>\r\n        <Card className={classes.card }>\r\n          <CardHeader className={classes.cardHeader}\r\n          title= {\r\n            \"ML Model\"\r\n                }\r\n          subheader = {\r\n            \"Select Your ML Model\"\r\n                    }\r\n          />\r\n          <CardContent>\r\n            <List>\r\n                <ListItem button>\r\n                    Linear Model\r\n                    <ListItemSecondaryAction>\r\n                        <IconButton>\r\n                            <CheckCircle />\r\n                        </IconButton>\r\n                    </ListItemSecondaryAction>\r\n                </ListItem>\r\n            </List>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles) (SelectedModel);\r\n","import React, { Component } from 'react'\r\nimport {Line, LineChart, XAxis, YAxis, CartesianGrid, Legend} from 'recharts';\r\n /*const data = [\r\n    {\r\n        mse: 0.5\r\n    },\r\n    {\r\n        mse : 0.4\r\n    },\r\n    {\r\n        mse : 0.3\r\n    },\r\n    {\r\n        mse : 0.2\r\n    }\r\n\r\n]; */\r\nexport class TrainLogs extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n    \r\n  <LineChart width={500} height={300} data={this.props.data}>\r\n    <XAxis dataKey=\"epoch\" type=\"number\" label={{value:\"Epochs\", offset:0, position:\"insideBottom\"}}/>\r\n    <YAxis type=\"number\" />\r\n    <CartesianGrid stroke=\"#eee\" strokeDasharray=\"5 5\"/>\r\n    <Legend />\r\n    <Line type=\"monotone\" dataKey=\"mse\" name=\"Mean Squared Error\" stroke=\"#8884d8\" dot={false} />\r\n    <Line type=\"monotone\" dataKey=\"acc\" name=\"Accuracy\" stroke=\"#82ca9d\" dot={false} />\r\n  </LineChart>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n//<Line type=\"monotone\" name = \"Training Loss\" dataKey=\"loss\" stroke=\"#2600ff\" />\r\n//<Line type=\"monotone\" name=\"Accuracy\" dataKey=\"acc\" stroke=\"#258220\" />\r\n/*\r\n    <LineChart width={500} height={300} data={this.props.data}>\r\n    <XAxis dataKey=\"epoch\" type = \"number\" name=\"Epochs\"/>\r\n    <YAxis type=\"number\" />\r\n    <CartesianGrid stroke=\"#eee\" strokeDasharray=\"5 5\"/>\r\n    <Line type=\"monotone\" dataKey=\"mse\" stroke=\"#8884d8\" />\r\n    <Line type=\"monotone\" dataKey=\"loss\" stroke=\"#2600ff\" />\r\n    <Line type=\"monotone\" dataKey=\"accuracy\" stroke=\"#8884d8\" />\r\n  </LineChart>\r\n\r\n  */\r\nexport default TrainLogs\r\n","import React, { Component } from 'react'\r\nimport MLSettings from './MLsettings';\r\nimport D3Component from './D3Component';\r\nimport SelectedModel from './SelectedModel';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport {Grid, Button, CircularProgress} from '@material-ui/core';\r\nimport * as tf from '@tensorflow/tfjs';\r\nimport TrainLogs from './TrainLogs';\r\n//import * as tflayers from '@tensorflow/tfjs-layers';\r\n//import * as tf from '@tensorflow/tfjs-core';\r\nconst styles = {\r\n  root:\r\n  {\r\n    display:\"flex\",\r\n    flexDirection:\"column\",\r\n    minWidth:1000\r\n  },\r\n  grid : {\r\n    marginTop : 10,\r\n    marginBottom: 10\r\n   }\r\n}\r\nfunction getTensorflowLinearModel() {\r\n  var tfModel = tf.sequential();\r\n  tfModel.add(tf.layers.dense({units: 1, inputShape: [1]}));\r\n  tfModel.add(tf.layers.dense({units: 1}));\r\n  return tfModel;  \r\n}\r\n\r\nfunction parseData(data)\r\n{\r\n // console.log(data);\r\n  return tf.tidy(() => {\r\n    tf.util.shuffle(data);\r\n    var xValues = [];\r\n    var yValues = [];\r\n    for(var i = 0; i < data.length; i++)\r\n    {\r\n      xValues = xValues.concat([data[i].x]);\r\n      yValues = yValues.concat([data[i].y]);\r\n    }\r\n    const xTensor = tf.tensor2d(xValues, [xValues.length, 1]);\r\n    const yTensor = tf.tensor2d(yValues, [yValues.length, 1]);\r\n    const xMin = xTensor.min();\r\n    const xMax = xTensor.max();\r\n    const yMin = yTensor.min();\r\n    const yMax = yTensor.max();\r\n    const yNorm = yTensor.sub(yMin).div(yMax.sub(yMin));\r\n    const xNorm = xTensor.sub(xMin).div(xMax.sub(xMin));\r\n    return {\r\n      xNorm: xNorm,\r\n      yNorm:yNorm,\r\n      xMin:xMin,\r\n      yMin:yMin,\r\n      xMax:xMax,\r\n      yMax:yMax,\r\n    }\r\n  });\r\n}\r\n\r\n\r\n\r\nexport class TrainableModel extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.optimizers = [\"Adam\", \"RMSProp\"];\r\n    this.regularizations = [\"L1\", \"L2\"];\r\n\r\n    this.defaults = {\r\n      optimizer : this.optimizers[0],\r\n      regularization: this.regularizations[0],\r\n      epochs : 1,\r\n      learningRate : 0.1\r\n    }\r\n    \r\n    this.state = {\r\n       learningRate : 0.01,\r\n       epochs : 10,\r\n       regularization : this.regularizations[0],\r\n       optimizer: this.optimizers[0],\r\n       trainData : [],\r\n       trainLogs : [],\r\n       dataMaxX : 100,\r\n       dataMaxY : 100,\r\n       nowTraining : false,\r\n       predict : false,\r\n       predictedData : []\r\n    }\r\n    this.model = getTensorflowLinearModel();\r\n    \r\n    this.handleEpochsChange = this.handleEpochsChange.bind(this);\r\n    this.handleLearningRateChange = this.handleLearningRateChange.bind(this);\r\n    this.handleOptimizerChange = this.handleOptimizerChange.bind(this);\r\n    this.handleRegularizationChange = this.handleRegularizationChange.bind(this);\r\n    this.handleAddingDatapoint = this.handleAddingDatapoint.bind(this);\r\n  }\r\n  handleEpochsChange = (epochsNow) => {\r\n    this.setState({\r\n      epochs : epochsNow\r\n    });\r\n  }\r\n  handleRegularizationChange = (regularizationNow) => {\r\n   // console.log(\"Regularization change event\");\r\n    this.setState({\r\n      regularization : regularizationNow\r\n    });\r\n  }\r\n  handleOptimizerChange = (optimizerNow) => {\r\n    this.setState({\r\n      optimizer : optimizerNow\r\n    });\r\n  }\r\n  handleLearningRateChange = (learningRateNow) => {\r\n    this.setState({\r\n      learningRate : learningRateNow\r\n    });\r\n  }\r\n  handleAddingDatapoint = (datapoint) => {\r\n    //console.log(\"Handling DATA add\");\r\n    this.setState((prevState) => ({\r\n      trainData : prevState.trainData.concat({x:datapoint.x, y:datapoint.y})\r\n    }), () => {\r\n     // console.log(\"Data Point Added\");\r\n    });\r\n  }\r\n  \r\n  trainModel() {\r\n        this.setState({\r\n          nowTraining : true,\r\n          trainLogs : []\r\n        });\r\n        var fittable = parseData(this.state.trainData);\r\n        this.model.compile({\r\n          optimizer:this.state.optimizer,\r\n          loss: tf.losses.meanSquaredError,\r\n          metrics: ['mse', 'accuracy'],\r\n          lr : this.state.learningRate\r\n        });\r\n         this.model.fit(\r\n          fittable.xNorm,\r\n          fittable.yNorm,\r\n          {\r\n            epochs : this.state.epochs,\r\n            shuffle : true,\r\n            callbacks : {\r\n              onEpochEnd :  (epoch, logs) => {\r\n                var changedLogs = logs;\r\n                changedLogs.epoch = epoch;\r\n                this.setState((prevState) => ({\r\n                  trainLogs : prevState.trainLogs.concat([changedLogs])\r\n                }));\r\n              },\r\n              onTrainEnd : () => {\r\n                  this.setState({\r\n                    nowTraining : false\r\n                  })\r\n              }\r\n            }\r\n          }\r\n        );   \r\n  }\r\n\r\n  predict()\r\n  {\r\n    var predictData = [];\r\n    const [x, y] = tf.tidy(() => {\r\n      var xValues = tf.linspace(0,1, 100);\r\n      var preds = this.model.predict(xValues.reshape([100,1]));\r\n      const analysedData = parseData(this.state.trainData);\r\n      var unNormX = xValues.mul(analysedData.xMax.sub(analysedData.xMin)).add(analysedData.xMin);\r\n      var unNormY = preds.mul(analysedData.yMax.sub(analysedData.yMin)).add(analysedData.yMin);\r\n      return [unNormX.dataSync(), unNormY.dataSync()];\r\n    });\r\n    predictData = Array.from(x).map((val, i) => {\r\n      return {x: val, y:y[i]}\r\n    });\r\n    this.setState((prevState) => ({\r\n      predict : !prevState.predict\r\n    }), () => {\r\n      this.setState({\r\n        predictData : predictData\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {classes} = this.props;\r\n    return (\r\n      <div className={classes.root}>\r\n        <Grid container spacing={8} > \r\n          <Grid item xs={4} className={classes.grid}>\r\n            <SelectedModel />\r\n          </Grid>\r\n          <Grid item xs={8} className = {classes.grid}>\r\n            <MLSettings onEpochsChange={this.handleEpochsChange}\r\n                        onLearningRateChange = {this.handleLearningRateChange}\r\n                        onRegularizationChange = {this.handleRegularizationChange}\r\n                        onOptimizerChange = {this.handleOptimizerChange}\r\n                        optimizers = {this.optimizers}\r\n                        regularizations = {this.regularizations}\r\n                        current = {this.state}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6} className = {classes.grid} > \r\n            <D3Component data={this.state.trainData} predict={this.state.predict} predictData={this.state.predictData} dataMax = {[this.state.dataMaxX, this.state.dataMaxY]} onDatapointAdd={this.handleAddingDatapoint}/>\r\n          </Grid>\r\n          <Grid item xs={4} className = {classes.grid } >  \r\n            <TrainLogs data={this.state.trainLogs} />     \r\n          </Grid>\r\n          <Grid item xs={2} className = {classes.grid} >\r\n            <Button variant='contained' onClick={() => {this.trainModel()}} disabled={this.state.nowTraining}>  \r\n              {this.state.nowTraining ? \"TRAINING...   \" : \"TRAIN\"}\r\n              {this.state.nowTraining && <CircularProgress size={24}></CircularProgress>}\r\n            </Button> \r\n            <Button variant=\"contained\" onClick={() => {this.predict()}} >\r\n              Predict\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles) (TrainableModel);\r\n","const supported = {\r\n    elements : {\r\n        'opt-Adam' : {id:'opt-Adam', content:'Adam'},\r\n        'opt-RMSProp' : {id:'opt-RMSProp', content:'RMSProp'},\r\n        'opt-Momentum' : {id:'opt-Momentum', content:'Momentum'},\r\n        'reg-L1' : {id: 'reg-L1', content: 'L1'},\r\n        'reg-L2' : {id: 'reg-L2', content: 'L2'},\r\n        'mod-Linear' : {id : 'mod-Linear', content: 'Linear'}\r\n    },\r\n    columns :   {\r\n        'col-opt' : {\r\n            id  : 'col-opt',\r\n            title : 'Optimizers',\r\n            elementIds : ['opt-Adam','opt-RMSProp','opt-Momentum']\r\n        },\r\n        'col-reg' : {\r\n            id : 'col-reg',\r\n            title : 'Regularizations',\r\n            elementIds : ['reg-L1', 'reg-L2']\r\n        },\r\n        'col-mod' : {\r\n            id: 'col-mod',\r\n            title : 'Models',\r\n            elementIds : ['mod-Linear']\r\n        }\r\n    },\r\n    columnOrder : ['col-mod', 'col-opt', 'col-reg']\r\n}\r\n\r\nexport default supported;","import React, { Component } from 'react'\r\nimport { ListItem } from '@material-ui/core';\r\nimport {Draggable} from 'react-beautiful-dnd';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  transition: background-color 0.2s ease;\r\n  background-color : ${props => {return (props.isDragging ? 'lightgrey' : 'white');}};\r\n  border-radius : 3px;\r\n  margin : 3px;\r\n`;\r\n\r\nexport class DDContent extends Component {\r\n  render() {\r\n      const {classes} = this.props;\r\n    return (\r\n        <Draggable draggableId={this.props.element.id} index={this.props.index}>\r\n        {(provided, snapshot) => {\r\n            return (\r\n            <Container\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n            ref = {provided.innerRef}\r\n            isDragging = {snapshot.isDragging}\r\n            >\r\n            <ListItem button>\r\n            {this.props.element.content}\r\n            </ListItem>\r\n            </Container>)\r\n        }}\r\n        \r\n        </Draggable>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DDContent;\r\n","import React, { Component } from 'react'\r\nimport {ListSubheader} from '@material-ui/core';\r\nimport {Droppable} from 'react-beautiful-dnd';\r\nimport DDContent from './DDContent';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  transition : background-color 0.2s ease;\r\n  background-color : ${props => {return props.isDraggingOver ? 'darkgrey' : 'white'}};\r\n  border-radius : 3px;\r\n  padding : 3px;\r\n  min-height:50px;\r\n`;\r\n\r\n\r\nexport class DDColumn extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ListSubheader inset>{this.props.column.title}</ListSubheader>\r\n        <Droppable droppableId={this.props.column.id} type={this.props.droppableType}>\r\n        {(provided, snapshot) => {\r\n         return (<Container \r\n        ref = {provided.innerRef}\r\n        innerRef = {provided.innerRef}\r\n        {...provided.droppableProps}\r\n        isDraggingOver = {snapshot.isDraggingOver}\r\n        >\r\n            {this.props.elements.map((element, index) => {\r\n                return (\r\n                    <DDContent key={element.id} element={element} index={index} />\r\n                )\r\n            })}\r\n            {provided.placeholder}\r\n        </Container>)\r\n        }}\r\n        \r\n        </Droppable>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DDColumn\r\n","const drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n   root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  \r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginLeft: 12,\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing.unit * 7,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing.unit * 9,\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing.unit * 3,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  chartContainer: {\r\n    marginLeft: -22,\r\n  },\r\n  tableContainer: {\r\n    height: 320,\r\n  },\r\n  mainFeaturedPost: {\r\n    marginBottom: theme.spacing.unit * 2,\r\n    padding : \"5px\",\r\n    borderRadius : 0\r\n  },\r\n  mainFeaturedPostContent: {\r\n    backgroundColor: theme.palette.grey[800],\r\n    color: theme.palette.common.white,\r\n    borderRadius:0,\r\n    padding : \"10px\"\r\n    },\r\n  h5: {\r\n    marginBottom: theme.spacing.unit * 2,\r\n  },\r\n  dropArea : {\r\n    minHeight : \"50px\",\r\n    margin : \"5px\",\r\n  },\r\n  gridMargins : {\r\n    padding : \"3px\",\r\n    marginTop : \"10px\",\r\n    marginBottom : \"10px\"\r\n  },\r\n  textField:{\r\n    marginTop: \"0px\",\r\n    marginBottom : \"0px\",\r\n    paddingTop : \"0px\",\r\n    paddingBottom : \"0px\",\r\n\r\n},\r\nwhiteFont : {\r\n    color: theme.palette.common.white,\r\n},\r\nbuttonStyle : {\r\n    marginLeft : \"5px\",\r\n    marginRight : \"5px\"\r\n}\r\n  });\r\n\r\nexport default styles;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport {ListItem, TextField, Button} from '@material-ui/core';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport supported from './Supported';\r\nimport DDColumn from './DDColumns';\r\nimport D3Component from './D3Component';\r\nimport {Paper, Grid, CircularProgress} from '@material-ui/core';\r\nimport {DragDropContext, Droppable} from 'react-beautiful-dnd';\r\nimport styles from './DashboardStyles';\r\nimport styled from 'styled-components';\r\nimport * as tf from '@tensorflow/tfjs';\r\nimport TrainLogs from './TrainLogs';\r\nimport {DoneAll, PlayCircleOutline} from '@material-ui/icons/';\r\nconst Container = styled.div`\r\n  transition : background-color 0.2s ease;\r\n  background-color : ${props => {return props.isDraggingOver ? 'darkgrey' : 'white'}};\r\n  border-radius : 3px;\r\n  padding : 3px;\r\n  min-height:50px;\r\n`;\r\nconst TargetContainer = styled.div`\r\n  transition: background-color 0.2s ease;\r\n  background-color : ${props => {return (props.isDragging ? 'lightgrey' : 'white');}};\r\n  color : #000000;\r\n  border-radius : 3px;\r\n  margin : 3px;\r\n`;\r\n\r\nfunction getTensorflowLinearModel() {\r\n  var tfModel = tf.sequential();\r\n  tfModel.add(tf.layers.dense({units: 1, inputShape: [1]}));\r\n  tfModel.add(tf.layers.dense({units: 1}));\r\n  return tfModel;  \r\n}\r\n\r\nfunction parseData(data)\r\n{\r\n // console.log(data);\r\n  return tf.tidy(() => {\r\n    tf.util.shuffle(data);\r\n    var xValues = [];\r\n    var yValues = [];\r\n    for(var i = 0; i < data.length; i++)\r\n    {\r\n      xValues = xValues.concat([data[i].x]);\r\n      yValues = yValues.concat([data[i].y]);\r\n    }\r\n    const xTensor = tf.tensor2d(xValues, [xValues.length, 1]);\r\n    const yTensor = tf.tensor2d(yValues, [yValues.length, 1]);\r\n    const xMin = xTensor.min();\r\n    const xMax = xTensor.max();\r\n    const yMin = yTensor.min();\r\n    const yMax = yTensor.max();\r\n    const yNorm = yTensor.sub(yMin).div(yMax.sub(yMin));\r\n    const xNorm = xTensor.sub(xMin).div(xMax.sub(xMin));\r\n    return {\r\n      xNorm: xNorm,\r\n      yNorm:yNorm,\r\n      xMin:xMin,\r\n      yMin:yMin,\r\n      xMax:xMax,\r\n      yMax:yMax,\r\n    }\r\n  });\r\n}\r\n\r\nclass Dashboard extends React.Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.onDragEnd = this.onDragEnd.bind(this);\r\n    this.state = {\r\n      ...supported,\r\n      model: \"Linear\",\r\n      optimizer :\"Adam\",\r\n      regularization : \"L1\",\r\n      learningRate : 0.01,\r\n      epochs : 10,\r\n      trainData : [],\r\n      trainLogs : [],\r\n      dataMaxX : 100,\r\n      dataMaxY : 100,\r\n      nowTraining : false,\r\n      predict : false,\r\n      predictedData : []\r\n    }\r\n    this.model = getTensorflowLinearModel();\r\n    \r\n    this.handleEpochsChange = this.handleEpochsChange.bind(this);\r\n    this.handleLearningRateChange = this.handleLearningRateChange.bind(this);\r\n    this.handleOptimizerChange = this.handleOptimizerChange.bind(this);\r\n    this.handleRegularizationChange = this.handleRegularizationChange.bind(this);\r\n    this.handleAddingDatapoint = this.handleAddingDatapoint.bind(this);\r\n  }\r\n  handleEpochsChange = (epochsNow) => {\r\n    this.setState({\r\n      epochs : epochsNow\r\n    });\r\n  }\r\n  handleRegularizationChange = (regularizationNow) => {\r\n   // console.log(\"Regularization change event\");\r\n    this.setState({\r\n      regularization : regularizationNow\r\n    });\r\n  }\r\n  handleOptimizerChange = (optimizerNow) => {\r\n    this.setState({\r\n      optimizer : optimizerNow\r\n    });\r\n  }\r\n  handleLearningRateChange = (learningRateNow) => {\r\n    this.setState({\r\n      learningRate : learningRateNow\r\n    });\r\n  }\r\n  handleAddingDatapoint = (datapoint) => {\r\n    //console.log(\"Handling DATA add\");\r\n    this.setState((prevState) => ({\r\n      trainData : prevState.trainData.concat({x:datapoint.x, y:datapoint.y})\r\n    }), () => {\r\n     // console.log(\"Data Point Added\");\r\n    });\r\n  }\r\n  \r\n  trainModel() {\r\n        this.setState({\r\n          nowTraining : true,\r\n          trainLogs : []\r\n        });\r\n        var fittable = parseData(this.state.trainData);\r\n        this.model.compile({\r\n          optimizer:this.state.optimizer,\r\n          loss: tf.losses.meanSquaredError,\r\n          metrics: ['mse', 'accuracy'],\r\n          lr : this.state.learningRate\r\n        });\r\n         this.model.fit(\r\n          fittable.xNorm,\r\n          fittable.yNorm,\r\n          {\r\n            epochs : this.state.epochs,\r\n            shuffle : true,\r\n            callbacks : {\r\n              onEpochEnd :  (epoch, logs) => {\r\n                var changedLogs = logs;\r\n                changedLogs.epoch = epoch;\r\n                this.setState((prevState) => ({\r\n                  trainLogs : prevState.trainLogs.concat([changedLogs])\r\n                }));\r\n              },\r\n              onTrainEnd : () => {\r\n                  this.setState({\r\n                    nowTraining : false\r\n                  })\r\n              }\r\n            }\r\n          }\r\n        );   \r\n  }\r\n\r\n  predict()\r\n  {\r\n    var predictData = [];\r\n    const [x, y] = tf.tidy(() => {\r\n      var xValues = tf.linspace(0,1, 100);\r\n      var preds = this.model.predict(xValues.reshape([100,1]));\r\n      const analysedData = parseData(this.state.trainData);\r\n      var unNormX = xValues.mul(analysedData.xMax.sub(analysedData.xMin)).add(analysedData.xMin);\r\n      var unNormY = preds.mul(analysedData.yMax.sub(analysedData.yMin)).add(analysedData.yMin);\r\n      return [unNormX.dataSync(), unNormY.dataSync()];\r\n    });\r\n    predictData = Array.from(x).map((val, i) => {\r\n      return {x: val, y:y[i]}\r\n    });\r\n    this.setState((prevState) => ({\r\n      predict : !prevState.predict\r\n    }), () => {\r\n      this.setState({\r\n        predictData : predictData\r\n      });\r\n    });\r\n  }\r\n  \r\n  onDragEnd(result) {\r\n    if(!result)\r\n    {\r\n      return;\r\n    }\r\n    const {draggableId, destination, source} = result;\r\n    \r\n    if(!destination)\r\n    {\r\n      return;\r\n    }\r\n    if(\r\n      destination.droppableId === source.droppableId && destination.index === source.index\r\n    )\r\n    {\r\n      return;\r\n    }\r\n    if (destination.droppableId.startsWith(\"tar\"))\r\n    {\r\n        if(destination.droppableId == \"tar-mod\")\r\n        {\r\n          this.setState({\r\n            model : this.state.elements[this.state.columns[source.droppableId].elementIds[source.index]].content\r\n          })\r\n        }\r\n        else if (destination.droppableId == \"tar-opt\")\r\n        {\r\n          this.setState({\r\n            optimizer : this.state.elements[this.state.columns[source.droppableId].elementIds[source.index]].content\r\n          })\r\n        }\r\n        else\r\n        {\r\n          this.setState({\r\n            regularization : this.state.elements[this.state.columns[source.droppableId].elementIds[source.index]].content\r\n          })\r\n        }\r\n    }\r\n    const startColumn = this.state.columns[source.droppableId];\r\n    const finishColumn = this.state.columns[destination.droppableId];\r\n    if(startColumn === finishColumn)\r\n    {\r\n      const newElementIds = Array.from(startColumn.elementIds);\r\n      newElementIds.splice(source.index, 1);\r\n      newElementIds.splice(destination.index, 0, draggableId);\r\n\r\n      const newColumn = {\r\n        ...startColumn,\r\n        elementIds : newElementIds\r\n      };\r\n      const newState = {\r\n        ...this.state,\r\n        columns : {\r\n          ...this.state.columns,\r\n          [newColumn.id] : newColumn\r\n        }\r\n      };\r\n      this.setState(newState);\r\n      return;\r\n    }\r\n\r\n    \r\n  }\r\n\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <DragDropContext \r\n      onDragEnd = {this.onDragEnd}\r\n      >\r\n      <div className={classes.root}>\r\n     \r\n        <CssBaseline />\r\n        <AppBar\r\n          position=\"absolute\"\r\n          className={classNames(classes.appBar, classes.appBarShift)}\r\n        >\r\n          <Toolbar disableGutters={false} className={classes.toolbar}>\r\n            <Typography\r\n              component=\"h1\"\r\n              variant=\"h6\"\r\n              color=\"inherit\"\r\n              noWrap\r\n              className={classes.title}\r\n            >\r\n              TensorMAP\r\n            </Typography>\r\n            <TargetContainer>\r\n            <TextField  label=\"Learning Rate\"\r\n                          type=\"number\"\r\n                          className={classes.textField}\r\n                          margin=\"normal\"\r\n                          value = {this.state.learningRate}\r\n                          onChange = {(e) => {this.handleLearningRateChange(e.target.value)}}\r\n                         \r\n              />\r\n              </TargetContainer>\r\n              <TargetContainer>\r\n              <TextField  label=\"Epochs\"\r\n                          type=\"number\"\r\n                          className={classes.textField}\r\n                          margin=\"normal\"\r\n                          value = {this.state.epochs}\r\n                          onChange = {(e) => {this.handleEpochsChange(e.target.value)}}\r\n              />\r\n              </TargetContainer>\r\n              <Button variant=\"contained\" onClick={() => {this.trainModel()}} className={classes.buttonStyle}>\r\n              \r\n                <PlayCircleOutline />\r\n                {this.state.nowTraining ? \"TRAINING...   \" : \"TRAIN\"}\r\n              {this.state.nowTraining && <CircularProgress size={24}></CircularProgress>}\r\n              </Button>\r\n              <Button variant=\"contained\" onClick={() => {this.predict()}} className={classes.buttonStyle}>\r\n              \r\n                <DoneAll />\r\n              PREDICT\r\n              </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: classNames(classes.drawerPaper),\r\n          }}\r\n          open={true}\r\n        >\r\n          \r\n        <div>\r\n        {\r\n            this.state.columnOrder.map((columnId) => {\r\n          const column = this.state.columns[columnId];\r\n          const elements = column.elementIds.map((elementId) => {return this.state.elements[elementId]});\r\n          return <DDColumn key={columnId} column={column} elements={elements} droppableType = {column.title}/>\r\n            })\r\n        }\r\n        </div>\r\n        \r\n        </Drawer>\r\n        <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Paper className={classes.mainFeaturedPost} elevation={1}>\r\n        \r\n        <Grid container>\r\n          <Grid item md={4} className={classes.gridMargins}>\r\n            <Paper className={classes.mainFeaturedPostContent} elevation={4}>\r\n              <Typography  padding=\"3\" align=\"center\" variant=\"h5\" color=\"inherit\" gutterBottom>\r\n                    Model\r\n              </Typography>\r\n              <Typography align=\"center\" variant=\"subtitle2\" color=\"inherit\" gutterBottom >\r\n                Drag and drop your model here.\r\n              </Typography>\r\n              <Droppable droppableId={\"tar-mod\"} type={\"Models\"}>\r\n              {(provided, snapshot)=> { return <Container\r\n                  ref = {provided.innerRef}\r\n                  innerRef = {provided.innerRef}\r\n                  {...provided.droppableProps}\r\n                  isDraggingOver = {snapshot.isDraggingOver}\r\n                  className= {classes.dropArea}\r\n              > \r\n              <TargetContainer><ListItem>{this.state.model}</ListItem></TargetContainer>\r\n              {provided.placeholder}</Container>}}\r\n              </Droppable>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item md={4} className={classes.gridMargins}>\r\n            <Paper className={classes.mainFeaturedPostContent} elevation={4}>\r\n              <Typography  padding=\"3\" align=\"center\" variant=\"h5\" color=\"inherit\" gutterBottom>\r\n                    Optimizer\r\n              </Typography>\r\n              <Typography align=\"center\" variant=\"subtitle2\" color=\"inherit\" gutterBottom >\r\n                Drag and drop your Optimizer here.\r\n              </Typography>\r\n              <Droppable droppableId={\"tar-opt\"} type={'Optimizers'}>\r\n              {(provided, snapshot)=> { return <Container\r\n                  ref = {provided.innerRef}\r\n                  innerRef = {provided.innerRef}\r\n                  {...provided.droppableProps}\r\n                  isDraggingOver = {snapshot.isDraggingOver}\r\n                  className= {classes.dropArea}\r\n              > \r\n              <TargetContainer><ListItem>{this.state.optimizer}</ListItem></TargetContainer>\r\n              {provided.placeholder}</Container>}}\r\n              </Droppable>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item md={4} className={classes.gridMargins}>\r\n            <Paper className={classes.mainFeaturedPostContent} elevation={4}>\r\n              <Typography  padding=\"3\" align=\"center\" variant=\"h5\" color=\"inherit\" gutterBottom>\r\n                    Regularization\r\n              </Typography>\r\n              <Typography align=\"center\" variant=\"subtitle2\" color=\"inherit\" gutterBottom >\r\n                Drag and drop your Regularization here.\r\n              </Typography>\r\n              <Droppable droppableId={\"tar-reg\"} type={\"Regularizations\"}>\r\n              {(provided, snapshot)=> { return <Container\r\n                  ref = {provided.innerRef}\r\n                  innerRef = {provided.innerRef}\r\n                  {...provided.droppableProps}\r\n                  isDraggingOver = {snapshot.isDraggingOver}\r\n                  className= {classes.dropArea}\r\n              > \r\n              <TargetContainer><ListItem>{this.state.regularization}</ListItem></TargetContainer>\r\n              {provided.placeholder}</Container>}}\r\n              </Droppable>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item md={6}>\r\n          <D3Component data={this.state.trainData} predict={this.state.predict} predictData={this.state.predictData} dataMax = {[this.state.dataMaxX, this.state.dataMaxY]} onDatapointAdd={this.handleAddingDatapoint}/>\r\n          </Grid>\r\n          <Grid item md={6}>\r\n          <TrainLogs data={this.state.trainLogs} />     \r\n          </Grid>\r\n        </Grid>\r\n        \r\n        </Paper>\r\n        </main>\r\n        \r\n      </div>\r\n      </DragDropContext>\r\n    );\r\n  }\r\n}\r\n/*\r\n <AppBar\r\n          position=\"absolute\"\r\n          className={classNames(classes.appBar,classes.appBarShift)}\r\n        >\r\n          <Toolbar disableGutters={false} className={classes.toolbar}>\r\n            <Typography\r\n              component=\"h1\"\r\n              variant=\"h6\"\r\n              color=\"inherit\"\r\n              noWrap\r\n              className={classes.title}\r\n            >\r\n              Dashboard\r\n              <IconButton color=\"inherit\">\r\n              <Badge badgeContent={4} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n*/\r\nDashboard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Dashboard);","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Typography from '@material-ui/core/Typography';\n//import Mycomponent from './components/Mycomponent';\nimport Header from './components/Header';\nimport TrainableModel from './components/TrainableModel';\nimport MLSettings from './components/MLsettings';\nimport {withStyles} from '@material-ui/core/styles';\nimport Dashboard from './components/Dashboard';\nclass App extends Component {\n  render() {\n    return (\n      <div >\n       <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500\" />\n       <script src=\"https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@1.0.0/dist/tf.min.js\"></script>\n       <Dashboard />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}